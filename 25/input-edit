cpy a d          d := a
cpy 7 c          c := 7
                 {
cpy 362 b          b := 362
                   {
inc d                d++
dec b                b--
jnz b -2           } while (b /= 0);    // d += 362; b := 0;
dec c              c--;
jnz c -5         } while (c /= 0);  // d += 362 * 7;

                 loop {
cpy d a            a := d   // d doesn't change in the following loop

                   {
jnz 0 0              nop;

cpy a b              b := a;
cpy 0 a              a := 0;

                     Y:
cpy 2 c              c := 2;
                     {
jnz b 2                if (b == 0) goto B
jnz 1 6
dec b                  b--;
dec c                  c--;
jnz c -4             } while (c /= 0);     // b -= 2
inc a                a++;
jnz 1 -7             goto Y             // a /= 2  (integer division)
                                 // c ends up as 2 if a is even, 1 if a odd.
                     B:
cpy 2 b              b := 2
                     loop {
jnz c 2                if (c == 0) break;
jnz 1 4
dec b                  b--
dec c                  c--
jnz 1 -4             }         // b = 2 - c;  i.e. b = a % 2.

jnz 0 0              G: nop;

out b                out b
jnz a -19          } while (a /= 0);
jnz 1 -21        }
